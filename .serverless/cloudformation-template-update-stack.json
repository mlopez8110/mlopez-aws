{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "AppointmentLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/appointment-service-dev-appointment"
      }
    },
    "AppointmentCountryPELogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/appointment-service-dev-appointmentCountryPE"
      }
    },
    "AppointmentCountryCLLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/appointment-service-dev-appointmentCountryCL"
      }
    },
    "AppointmentConfirmationLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/appointment-service-dev-appointmentConfirmation"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "appointment-service",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/appointment-service-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/appointment-service-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:Query",
                    "dynamodb:UpdateItem"
                  ],
                  "Resource": [
                    "arn:aws:dynamodb:us-east-2:*:table/appointment-service-appointments-dev",
                    "arn:aws:dynamodb:us-east-2:*:table/appointment-service-appointments-dev/index/insuredId-index"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Publish"
                  ],
                  "Resource": [
                    {
                      "Ref": "AppointmentTopic"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:SendMessage",
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "SQSPE",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "SQSCL",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "CompletionQueue",
                        "Arn"
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "events:PutEvents"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "SQSPE",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "SQSCL",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "CompletionQueue",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "appointment-service",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "AppointmentLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/appointment-service/dev/1756392280320-2025-08-28T14:44:40.320Z/appointment-service.zip"
        },
        "Handler": "src/lambdas/appointment.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "appointment-service-dev-appointment",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "APPOINTMENTS_TABLE": "appointment-service-appointments-dev",
            "SNS_TOPIC_NAME": "appointmentTopic-dev",
            "EVENT_BUS_NAME": "appointmentBus-dev",
            "RDS_HOST": "database-mysql.c3qa66c6k2c7.us-east-2.rds.amazonaws.com",
            "RDS_USER": "admin",
            "RDS_PASSWORD": "sGUicl8xjWIfjrExMdF1",
            "RDS_DATABASE": "appointments_mysql",
            "SNS_TOPIC_ARN": {
              "Ref": "AppointmentTopic"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AppointmentLogGroup"
      ]
    },
    "AppointmentCountryPELambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/appointment-service/dev/1756392280320-2025-08-28T14:44:40.320Z/appointment-service.zip"
        },
        "Handler": "src/lambdas/appointmentCountry.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "appointment-service-dev-appointmentCountryPE",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "APPOINTMENTS_TABLE": "appointment-service-appointments-dev",
            "SNS_TOPIC_NAME": "appointmentTopic-dev",
            "EVENT_BUS_NAME": "appointmentBus-dev",
            "RDS_HOST": "database-mysql.c3qa66c6k2c7.us-east-2.rds.amazonaws.com",
            "RDS_USER": "admin",
            "RDS_PASSWORD": "sGUicl8xjWIfjrExMdF1",
            "RDS_DATABASE": "appointments_mysql"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AppointmentCountryPELogGroup"
      ]
    },
    "AppointmentCountryCLLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/appointment-service/dev/1756392280320-2025-08-28T14:44:40.320Z/appointment-service.zip"
        },
        "Handler": "src/lambdas/appointmentCountry.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "appointment-service-dev-appointmentCountryCL",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "APPOINTMENTS_TABLE": "appointment-service-appointments-dev",
            "SNS_TOPIC_NAME": "appointmentTopic-dev",
            "EVENT_BUS_NAME": "appointmentBus-dev",
            "RDS_HOST": "database-mysql.c3qa66c6k2c7.us-east-2.rds.amazonaws.com",
            "RDS_USER": "admin",
            "RDS_PASSWORD": "sGUicl8xjWIfjrExMdF1",
            "RDS_DATABASE": "appointments_mysql"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AppointmentCountryCLLogGroup"
      ]
    },
    "AppointmentConfirmationLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/appointment-service/dev/1756392280320-2025-08-28T14:44:40.320Z/appointment-service.zip"
        },
        "Handler": "src/lambdas/appointmentConfirmation.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "appointment-service-dev-appointmentConfirmation",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "APPOINTMENTS_TABLE": "appointment-service-appointments-dev",
            "SNS_TOPIC_NAME": "appointmentTopic-dev",
            "EVENT_BUS_NAME": "appointmentBus-dev",
            "RDS_HOST": "database-mysql.c3qa66c6k2c7.us-east-2.rds.amazonaws.com",
            "RDS_USER": "admin",
            "RDS_PASSWORD": "sGUicl8xjWIfjrExMdF1",
            "RDS_DATABASE": "appointments_mysql"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AppointmentConfirmationLogGroup"
      ]
    },
    "AppointmentLambdaVersion0F7tngoCavSOVgb0NyVWsTWXirpNAdCZXX6615TA": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AppointmentLambdaFunction"
        },
        "CodeSha256": "viQZWNFIch2Nh3gJ6X1yQFo77QcLPLu5ESOZoHPI4Ew="
      }
    },
    "AppointmentCountryPELambdaVersion1nZNoXy1WiHigRjiSxhTvrW9GNMY06bllsANgEZyg": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AppointmentCountryPELambdaFunction"
        },
        "CodeSha256": "viQZWNFIch2Nh3gJ6X1yQFo77QcLPLu5ESOZoHPI4Ew="
      }
    },
    "AppointmentCountryCLLambdaVersionKm2sf8kUSYfA1y7pctXJVSVw4VZzXUgxR4TrrsBQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AppointmentCountryCLLambdaFunction"
        },
        "CodeSha256": "viQZWNFIch2Nh3gJ6X1yQFo77QcLPLu5ESOZoHPI4Ew="
      }
    },
    "AppointmentConfirmationLambdaVersionSmc6ZhOFBMNXmhGNfydn0UPLK7oWZdvxJfRcN7YrpdM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AppointmentConfirmationLambdaFunction"
        },
        "CodeSha256": "viQZWNFIch2Nh3gJ6X1yQFo77QcLPLu5ESOZoHPI4Ew="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-appointment-service",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceAppointments": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "appointments",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceAppointmentsInsuredidVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceAppointments"
        },
        "PathPart": "{insuredId}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodAppointmentsPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceAppointments"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AppointmentLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AppointmentLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodAppointmentsInsuredidVarGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceAppointmentsInsuredidVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "AppointmentLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "AppointmentLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1756392159139": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodAppointmentsPost",
        "ApiGatewayMethodAppointmentsInsuredidVarGet"
      ]
    },
    "AppointmentLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AppointmentLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "AppointmentCountryPEEventSourceMappingSQSSQSPE": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "BatchSize": 10,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "SQSPE",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "AppointmentCountryPELambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "AppointmentCountryCLEventSourceMappingSQSSQSCL": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "BatchSize": 10,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "SQSCL",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "AppointmentCountryCLLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "AppointmentConfirmationEventSourceMappingSQSCompletionQueue": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "BatchSize": 10,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "CompletionQueue",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "AppointmentConfirmationLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "AppointmentsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "appointment-service-appointments-dev",
        "AttributeDefinitions": [
          {
            "AttributeName": "appointmentId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "insuredId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "appointmentId",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "insuredId-index",
            "KeySchema": [
              {
                "AttributeName": "insuredId",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        ]
      }
    },
    "AppointmentTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "appointmentTopic-dev"
      }
    },
    "SQSPE": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "SQSPE-dev"
      }
    },
    "SQSCL": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "SQSCL-dev"
      }
    },
    "CompletionQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "CompletionQueue-dev"
      }
    },
    "SnsSubscriptionPE": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "TopicArn": {
          "Ref": "AppointmentTopic"
        },
        "Protocol": "sqs",
        "Endpoint": {
          "Fn::GetAtt": [
            "SQSPE",
            "Arn"
          ]
        },
        "FilterPolicy": {
          "countryISO": [
            "PE"
          ]
        }
      }
    },
    "SnsSubscriptionCL": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "TopicArn": {
          "Ref": "AppointmentTopic"
        },
        "Protocol": "sqs",
        "Endpoint": {
          "Fn::GetAtt": [
            "SQSCL",
            "Arn"
          ]
        },
        "FilterPolicy": {
          "countryISO": [
            "CL"
          ]
        }
      }
    },
    "AppointmentBus": {
      "Type": "AWS::Events::EventBus",
      "Properties": {
        "Name": "appointmentBus-dev"
      }
    },
    "AppointmentCompletionRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Name": "AppointmentCompletionRule-dev",
        "EventBusName": {
          "Ref": "AppointmentBus"
        },
        "EventPattern": {
          "source": [
            "appointment.country"
          ]
        },
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CompletionQueue",
                "Arn"
              ]
            },
            "Id": "CompletionQueueTarget"
          }
        ]
      }
    },
    "EventBridgeToSqsPermission": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "Queues": [
          {
            "Ref": "CompletionQueue"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Action": "sqs:SendMessage",
              "Resource": {
                "Fn::GetAtt": [
                  "CompletionQueue",
                  "Arn"
                ]
              }
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-appointment-service-dev-ServerlessDeploymentBucketName"
      }
    },
    "AppointmentLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AppointmentLambdaVersion0F7tngoCavSOVgb0NyVWsTWXirpNAdCZXX6615TA"
      },
      "Export": {
        "Name": "sls-appointment-service-dev-AppointmentLambdaFunctionQualifiedArn"
      }
    },
    "AppointmentCountryPELambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AppointmentCountryPELambdaVersion1nZNoXy1WiHigRjiSxhTvrW9GNMY06bllsANgEZyg"
      },
      "Export": {
        "Name": "sls-appointment-service-dev-AppointmentCountryPELambdaFunctionQualifiedArn"
      }
    },
    "AppointmentCountryCLLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AppointmentCountryCLLambdaVersionKm2sf8kUSYfA1y7pctXJVSVw4VZzXUgxR4TrrsBQ"
      },
      "Export": {
        "Name": "sls-appointment-service-dev-AppointmentCountryCLLambdaFunctionQualifiedArn"
      }
    },
    "AppointmentConfirmationLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AppointmentConfirmationLambdaVersionSmc6ZhOFBMNXmhGNfydn0UPLK7oWZdvxJfRcN7YrpdM"
      },
      "Export": {
        "Name": "sls-appointment-service-dev-AppointmentConfirmationLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-appointment-service-dev-ServiceEndpoint"
      }
    },
    "AppointmentsTableName": {
      "Value": "appointment-service-appointments-dev"
    }
  }
}